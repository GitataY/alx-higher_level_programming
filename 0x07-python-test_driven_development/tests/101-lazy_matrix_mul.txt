def test_lazy_matrix_mul():
    assert lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]) == [[7, 10], [15, 22]]
    assert lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]) == [[13, 16]]
    assert lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]]) == [[58, 64], [139, 154]]
    assert lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12], [13, 14, 15]]) == ValueError("m_a and m_b can't be multiplied")
    assert lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]]) == ValueError("m_a and m_b can't be multiplied")
    assert lazy_matrix_mul([], [[1, 2], [3, 4]]) == ValueError("m_a can't be empty")
    assert lazy_matrix_mul([[1, 2], [3, 4]], []) == ValueError("m_b can't be empty")
    assert lazy_matrix_mul([1, 2, 3], [[1, 2], [3, 4]]) == TypeError("m_a must be a list of lists or m_b must be a list of lists")
    assert lazy_matrix_mul([[1, 2], [3, 4]], [1, 2, 3]) == TypeError("m_a must be a list of lists or m_b must be a list of lists")
    assert lazy_matrix_mul(123, [[1, 2], [3, 4]]) == TypeError("m_a must be a list or m_b must be a list")
    assert lazy_matrix_mul([[1, 2], [3, 4]], 123) == TypeError("m_a must be a list or m_b must be a list")
    assert lazy_matrix_mul([[1, 2], [3, 'four']], [[1, 2], [3, 4]]) == TypeError("m_a should contain only integers or floats")
    assert lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 'four']]) == TypeError("m_b should contain only integers or floats")
    assert lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]]) == TypeError("each row of m_a must be of the same size")
    assert lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]]) == TypeError("each row of m_b must be of the same size")
